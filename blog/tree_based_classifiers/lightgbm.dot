digraph {
    compound=true
	fontname="Inconsolata, Consolas"
	fontsize=20
	margin="0,0"
	ranksep=0.5
	penwidth=0.5
	forcelabels=true
    rankdir = LR

    subgraph cluster_objective_function {
        margin="10,10"
		labeljust="left"
		//label = "objective_function.h"
		style=filled
		fillcolor=gray95

        cObjectiveFunction[shape = Mrecord, label = "class ObjectiveFunction", style = filled, fillcolor=lightyellow]  

        // src/objective/regression_objective.hpp
        cRegressionL2loss[shape = Mrecord, label = "class RegressionL2loss", style = filled, fillcolor=lightyellow] 

        cRegressionL1loss[shape = Mrecord, label = "class RegressionL1loss", style = filled, fillcolor=lightyellow]

        cRegressionHuberLoss[shape = Mrecord, label = "class RegressionHuberLoss", style = filled, fillcolor=lightyellow] 

        cRegressionFairLoss[shape = Mrecord, label = "class RegressionFairLoss", style = filled, fillcolor=lightyellow] 

        cRegressionPoissonLoss[shape = Mrecord, label = "class RegressionPoissonLoss", style = filled, fillcolor=lightyellow] 

        cRegressionQuantileloss[shape = Mrecord, label = "class RegressionQuantileloss", style = filled, fillcolor=lightyellow] 

        cRegressionMAPELOSS[shape = Mrecord, label = "class RegressionMAPELOSS", style = filled, fillcolor=lightyellow] 

        cRegressionGammaLoss[shape = Mrecord, label = "class RegressionGammaLoss", style = filled, fillcolor=lightyellow]

        cRegressionTweedieLoss[shape = Mrecord, label = "class RegressionTweedieLoss", style = filled, fillcolor=lightyellow]


        cRegressionL2loss->cObjectiveFunction[label = "inheritance"]

        {cRegressionL1loss; cRegressionHuberLoss; cRegressionFairLoss; cRegressionPoissonLoss; cRegressionQuantileloss}->cRegressionL2loss[label = "inheritance"]

        cRegressionMAPELOSS->cRegressionL1loss[label = "inheritance"]

        cRegressionGammaLoss->cRegressionPoissonLoss[label = "inheritance"]

        cRegressionTweedieLoss->cRegressionPoissonLoss[label = "inheritance"]




        

    }//cluster_objective_function

    subgraph cluster_application {
        margin="10,10"
		labeljust="left"
		label = "application.h"
		style=filled
		fillcolor=gray95

        cApplication[shape = Mrecord, label = "class Application", style = filled, fillcolor=lightyellow]

       
    }

     cApplication->{cBoosting; cObjectiveFunction;cDataset}[label = "member"]
     cApplication->cMetric[label = "member"]
     cApplication->sOverallConfig[label = "member"]

    subgraph cluster_bin{
        rankdir = TB
        margin="10,10"
		labeljust="left"
		label = "bin.h"
		style=filled
		fillcolor=gray95

        sHistogramBinEntry[shape = Mrecord, label = "struct HistogramBinEntry", style = filled, fillcolor=lightyellow]

        cBinMapper[shape = Mrecord, label = "class BinMapper", style = filled, fillcolor=lightyellow]

        cOrderedBin[shape = Mrecord, label = "class OrderedBin", style = filled, fillcolor=lightyellow]

        cBinIterator[shape = Mrecord, label = "class BinIterator", style = filled, fillcolor=lightyellow]

        cBin[shape = Mrecord, label = "class Bin", style = filled, fillcolor=lightyellow]

    }

    subgraph cluster_boosting {
        margin="10,10"
		labeljust="left"
		label = "boosting.h"
		style=filled
		fillcolor=gray95

        cBoosting[shape = Mrecord, label = "class Boosting", style = filled, fillcolor=lightyellow]

        cGBDTBase[shape = Mrecord, label = "class GBDTBase", style = filled, fillcolor=lightyellow]

        cGBDTBase->cBoosting

    }

    subgraph cluster_config {
        margin="10,10"
		labeljust="left"
		label = "config.h"
		style=filled
		fillcolor=gray95

        sConfigBase[shape = Mrecord, label = "struct ConfigBase", style = filled, fillcolor=lightyellow]

        sIOConfig[shape = Mrecord, label = "struct IOConfig", style = filled, fillcolor=lightyellow]

        sIOConfig->sConfigBase

        sObjectiveConfig[shape = Mrecord, label = "struct ObjectiveConfig", style = filled, fillcolor=lightyellow]

        sObjectiveConfig -> sConfigBase

        sMetricConfig[shape = Mrecord, label = "struct MetricConfig", style = filled, fillcolor=lightyellow]

        sMetricConfig->sConfigBase

        sTreeConfig[shape = Mrecord, label = "struct TreeConfig", style = filled, fillcolor=lightyellow]

        sTreeConfig->sConfigBase

        sBoostingConfig[shape = Mrecord, label = "struct BoostingConfig", style = filled, fillcolor=lightyellow]

        sBoostingConfig -> sConfigBase

        sNetworkConfig[shape = Mrecord, label = "struct NetworkConfig", style = filled, fillcolor=lightyellow]

        sNetworkConfig->sConfigBase

        sOverallConfig[shape = Mrecord, label = "struct OverallConfig", style = filled, fillcolor=lightyellow]

        sOverallConfig->sConfigBase[label = "inheritance"]
        sOverallConfig->sNetworkConfig[label = "member"]
        sOverallConfig->sIOConfig[label = "member"]
        sOverallConfig->sBoostingConfig[label = "member"]
        sOverallConfig->sObjectiveConfig[label = "member"]
        sOverallConfig->sMetricConfig[label = "member"]

        sParameterAlias[shape = Mrecord, label = "struct ParameterAlias", style = filled, fillcolor=lightyellow]

        {rank = same; sConfigBase; sParameterAlias}


    }//cluster_config

    subgraph cluster_dataset_loader {
        margin="10,10"
		labeljust="left"
		label = "dataset_loader.h"
		style=filled
		fillcolor=gray95

        cDatasetLoader[shape = Mrecord, label = "class DatasetLoader", style = filled, fillcolor=lightyellow]

    }// subgraph cluster_dataset_loader

    subgraph cluster_dataset {
        margin="10,10"
		labeljust="left"
		label = "dataset.h"
		style=filled
		fillcolor=gray95

        cMetadata[shape = Mrecord, label = "class Metadata", style = filled, fillcolor=lightyellow]

        cParser[shape = Mrecord, label = "class Parser", style = filled, fillcolor=lightyellow]

        cDataset[shape = Mrecord, label = "class Dataset", style = filled, fillcolor=lightyellow]

        cDataset->cDatasetLoader[label = "friend"]



    }// subgraph cluster_dataset

    subgraph cluster_feature_group {
        margin="10,10"
		labeljust="left"
		label = "feature_group.h"
		style=filled
		fillcolor=gray95

        cFeatureGroup[shape = Mrecord, label = "class FeatureGroup", style = filled, fillcolor=lightyellow]

        cFeatureGroup ->{cDataset; cDatasetLoader}[label = "friend"]
    }//cluster_feature_group

    subgraph cluster_metric {
        margin="10,10"
		labeljust="left"
		label = "metric.h"
		style=filled
		fillcolor=gray95

        cMetric[shape = Mrecord, label = "class Metric", style = filled, fillcolor=lightyellow]

        cDCGCalculator[shape = Mrecord, label = "class DCGCalculator", style = filled, fillcolor=lightyellow]
    }//cluster_metric

    

    subgraph cluster_tree {
        margin="10,10"
		labeljust="left"
		label = "tree.h"
		style=filled
		fillcolor=gray95

        cTree[shape = Mrecord, label = "class Tree", style = filled, fillcolor=lightyellow]  

        sPathElement[shape = Mrecord, label = "struct PathElement", style = filled, fillcolor=lightyellow]      
    }//cluster_tree

    subgraph cluster_tree_learner {
        margin="10,10"
		labeljust="left"
		label = "tree_learner.h"
		style=filled
		fillcolor=gray95

        cTreeLearner[shape = Mrecord, label = "class TreeLearner", style = filled, fillcolor=lightyellow]  

        sPathElement[shape = Mrecord, label = "struct PathElement", style = filled, fillcolor=lightyellow]      
    }//cluster_tree_learner

    ///////////////////////////////////////////////////
    // src
    subgraph cluster_gdbt {
        margin="10,10"
		labeljust="left"
		label = "src/boosting/gbdt.h"
		style=filled
		fillcolor=gray95

        cGBDT[shape = Mrecord, label = "class GBDT", style = filled, fillcolor=lightyellow]  
    }//cluster_gdbt

    cGBDT->cGBDTBase[label = "inheritance"]
    cGBDT->cDataset[label = "member"]
    cGBDT->sBoostingConfig[label = "member"]
    cGBDT->cTreeLearner[label = "member"]
    cGBDT->cObjectiveFunction[label = "member"]
    cGBDT->cMetric[label = "member"]
    cGBDT->cTree[label = "member"]

    subgraph cluster_goss {
        margin="10,10"
		labeljust="left"
		label = "src/boosting/goss.h"
		style=filled
		fillcolor=gray95

        cGOSS[shape = Mrecord, label = "class GOSS", style = filled, fillcolor=lightyellow]  
    }//cluster_goss
    cGOSS->cGBDT[label = "inheritance"]


    subgraph cluster_dart {
        margin="10,10"
		labeljust="left"
		label = "src/boosting/dart.h"
		style=filled
		fillcolor=gray95

        cDART[shape = Mrecord, label = "class DART", style = filled, fillcolor=lightyellow]  
    }//cluster_dart

    cDART->cGBDT[label = "inheritance"]

    subgraph cluster_rf {
        margin="10,10"
		labeljust="left"
		label = "src/boosting/rf.h"
		style=filled
		fillcolor=gray95

        cRF[shape = Mrecord, label = "class RF", style = filled, fillcolor=lightyellow]  
    }//cluster_dart
    
    cRF->cGBDT[label = "inheritance"]




    

    subgraph cluster_feature_hist {
        margin="10,10"
		labeljust="left"
		label = "src/treelearner/feature_histogram.h"
		style=filled
		fillcolor=gray95

        cFeatureMetainfo[shape = Mrecord, label = "class FeatureMetainfo", style = filled, fillcolor=lightyellow] 

        cFeatureHistogram[shape = Mrecord, label = "class FeatureHistogram", style = filled, fillcolor=lightyellow] 

        cFeatureHistogram->cFeatureMetainfo[label = "member"]

        cHistogramPool[shape = Mrecord, label = "class HistogramPool", style = filled, fillcolor=lightyellow]

        cHistogramPool->cFeatureHistogram[label = "member"]
        cHistogramPool->cFeatureMetainfo[label = "member"]


    }//cluster_feature_hist
    cFeatureHistogram->sHistogramBinEntry[label = "member"]
    cHistogramPool->sHistogramBinEntry[label = "member"]
    

    




    
 

}